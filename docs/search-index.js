var searchIndex = new Map(JSON.parse('[\
["interust",{"doc":"해당 라이브러리는 Rust 문법을 사용하는 …","t":"FFCNNNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNCPPPPPPPPPPPPPGPPPPPPPPPGPPPPPGPPPPPPPPPPPPGGPPPIPGPPPGPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOPPPPPPPGPPNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPPPPPPPPPPGPNNNNNNNNNNNNPPGPPPPPPPPFPPGNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNN","n":["InterustCompiler","InterustVM","ast","borrow","borrow","borrow_mut","borrow_mut","call_compiled_fn","call_compiled_var","eval_program","eval_string","export","export_from_program","export_from_str","export_from_tokens","from","from","import_compiled","into","into","new","new","object","parse","print","reset","reset_interpreter","reset_program","run_interpreter","token","tokenize","try_from","try_from","try_into","try_into","type_id","type_id","vmobject","And","Assign","Bit","BitAnd","BitOr","Bool","Bool","Bool","Call","Call","Divide","Equal","Equals","Expression","Expression","F64","F64","Fn","GreaterThan","I64","I64","Identifier","If","Infix","Infix","Insert","LessGreater","LessThan","Let","Literal","Literal","Lowest","Minus","Minus","Mod","Multiply","None","None","Not","NotEqual","Or","Plus","Precedence","Prefix","Prefix","Prefix","Product","Program","Return","Statement","String","String","Sum","Type","Variable","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_type","hash","into","into","into","into","into","into","into","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","alternative","arguments","body","condition","consequence","expression","function","identifier","parameters","return_type","variable","expression","variable","Bool","Error","F64","Fn","I64","LibraryFn","Null","Object","ReturnValue","String","borrow","borrow_mut","clone","clone_into","eq","fmt","fmt","from","get_type","into","to_owned","to_string","try_from","try_into","type_id","Assign","Bool","Class","CloseBrace","CloseBracket","CloseParen","Colon","Comma","Comment","EOF","Else","F64","Fn","For","I64","Identifier","If","Let","OpenBrace","OpenBracket","OpenParen","Operator","Return","ReturnType","Semicolon","String","Token","While","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","to_owned","try_from","try_into","type_id","Bool","Bool","Constant","Error","F64","F64","Fn","I64","I64","None","Null","Scope","String","String","VMObejct","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","into","into","into","new","stack","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"interust"],[38,"interust::ast"],[182,"interust::ast::Expression"],[193,"interust::ast::Statement"],[195,"interust::object"],[220,"interust::token"],[260,"interust::vmobject"],[315,"alloc::string"],[316,"alloc::vec"],[317,"core::option"],[318,"core::result"],[319,"core::any"],[320,"core::cmp"],[321,"core::fmt"],[322,"core::fmt"]],"d":["","","","","","","","외부에서 가상 머신 내에 존재하는 함수를 …","외부에서 가상 머신 내에 존재하는 변수를 …","인터프리터에서 프로그램을 실행시킵니다. …","인터프리터에서 텍스트 코드를 …","인터프리터에서 여태까지 작성된 코드를 …","","","","Returns the argument unchanged.","Returns the argument unchanged.","가상 머신에서 컴파일된 파일을 읽고 …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","인터프리터 엔진을 생성합니다.","가상 머신을 생성합니다.","","인터프리터의 토큰 파싱을 진행합니다.","가상 머신 내 상수와 식별자들을 …","인터프리터를 초기화합니다. 이전에 …","인터프리터를 초기화합니다. 변수, 함수 등 …","이전에 작성했던 코드를 제거합니다.","인터프리터에서 <code>self.program</code>에 저장된 전체 …","","인터프리터의 토크나이징을 진행합니다.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Java Stack 이나 Rust Interpreter 에 대해서 …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","식별자, (주소, 타입)","","","","","","","","","","","","",""],"i":[0,0,0,6,1,6,1,1,1,6,6,6,6,6,6,6,1,1,6,1,6,1,0,6,1,6,6,6,6,0,6,6,1,6,1,6,1,0,16,22,22,16,16,14,15,22,19,22,16,16,22,0,18,14,15,19,16,14,15,19,19,0,19,19,22,16,18,0,19,22,16,17,16,16,14,15,17,16,16,16,0,0,19,22,22,0,18,0,14,15,22,0,19,14,15,16,17,18,19,22,14,15,16,17,18,19,22,14,15,16,17,18,19,14,15,16,17,18,19,15,14,15,16,17,18,19,22,14,15,15,16,16,17,18,19,14,15,16,17,18,19,22,14,15,14,15,16,17,18,19,22,15,22,14,15,16,17,18,19,15,16,14,15,16,17,18,19,22,14,15,16,17,18,19,22,14,15,16,17,18,19,22,28,29,30,28,28,31,29,30,30,30,31,32,32,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,3,26,0,3,3,26,3,3,26,26,3,0,3,26,0,3,26,27,3,26,27,3,26,27,3,26,27,3,26,27,3,3,26,27,3,26,27,3,26,27,27,27,3,26,27,3,3,26,27,3,26,27,3,26,27],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,[4,[3]]],[[5,[3]]]],[[1,2],3],[[6,7],[[5,[8]]]],[[6,9],[[5,[8]]]],[[6,9],10],[[6,9,7],10],[[6,9,9],10],[[6,9,[4,[11]]],10],[-1,-1,[]],[-1,-1,[]],[[1,9],10],[-1,-2,[],[]],[-1,-2,[],[]],[[],6],[[],1],0,[[6,[4,[11]]],7],[1,10],[6,10],[6,10],[6,10],[6,[[5,[8]]]],0,[[6,9],[[4,[11]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[15,15],20],[[14,14],21],[[15,15],21],[[16,16],21],[[17,17],21],[[18,18],21],[[19,19],21],[[22,22],21],[[14,23],24],[[15,23],24],[[15,23],24],[[16,23],24],[[16,23],24],[[17,23],24],[[18,23],24],[[19,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[14,15],[[15,-1],10,25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[15,15],[[5,[20]]]],[[22,22],[[5,[20]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[[-1,-2],10,[],[]],[[8,8],21],[[8,23],24],[[8,23],24],[-1,-1,[]],[8,15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[11,11],[[-1,-2],10,[],[]],[[11,11],21],[[11,23],24],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[26,26],[27,27],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[3,3],21],[[26,26],21],[[27,27],21],[[3,23],24],[[3,23],24],[[26,23],24],[[27,23],24],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],27],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,13,[]],[-1,13,[]]],"c":[],"p":[[5,"InterustVM",0],[5,"String",315],[6,"VMObejct",260],[5,"Vec",316],[6,"Option",317],[5,"InterustCompiler",0],[8,"Program",38],[6,"Object",195],[1,"str"],[1,"tuple"],[6,"Token",220],[6,"Result",318],[5,"TypeId",319],[6,"Literal",38],[6,"Type",38],[6,"Infix",38],[6,"Prefix",38],[6,"Statement",38],[6,"Expression",38],[6,"Ordering",320],[1,"bool"],[6,"Precedence",38],[5,"Formatter",321],[8,"Result",321],[10,"Hasher",322],[6,"Constant",260],[5,"Scope",260],[15,"If",182],[15,"Call",182],[15,"Fn",182],[15,"Insert",182],[15,"Let",193]],"b":[[128,"impl-Display-for-Type"],[129,"impl-Debug-for-Type"],[130,"impl-Display-for-Infix"],[131,"impl-Debug-for-Infix"],[210,"impl-Display-for-Object"],[211,"impl-Debug-for-Object"],[290,"impl-Debug-for-VMObejct"],[291,"impl-Display-for-VMObejct"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
