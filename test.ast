[
    Let { 
        variable: Variable("five", I64), 
        expression: Some(Literal(I64(5))) 
    }, 
    Let { 
        variable: Variable("ten", F64), 
        expression: Some(Literal(I64(10))) 
    }, 
    Expression(
        Fn { 
            identifier: "add", 
            return_type: None,
            parameters: [
                Variable("x", I64), 
                Variable("y", None)
            ],
            body: [
                Return(
                    Infix(Plus, Identifier("x"), Identifier("y"))
                )
            ]
        }
    ), 
    Let { 
        variable: Variable("result", None), 
        expression: Some(
            Call { 
                function: Identifier("add"),
                arguments: [
                    Identifier("five"), 
                    Identifier("ten")
                ] 
            }
        ) 
    }, 
    Expression(
        Insert { 
            variable: Identifier("result"), 
            expression: Infix(Multiply, Identifier("five"), Identifier("ten")) 
        }
    ), 
    Expression(Identifier("result"))
]